<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.otree.douzone.dao.BoardDao">
	
	<!--삽입 -->
	<!-- 임의의 유저 id -->
	<insert id="insertBoard" parameterType="com.otree.douzone.dto.Board">
		<!-- <selectKey keyProperty="boardId" resultType="int" order="BEFORE">
			SELECT boardId_seq.nextval FROM dual
		</selectKey> -->
		INSERT INTO board (boardId, userId, workspaceId, boardTitle, boardContent, createdAt)
		VALUES (boardId_seq.nextval, #{userId}, #{workspaceId}, #{boardTitle}, #{boardContent}, SYSDATE)
	</insert>
	
	
	<!-- 게시글 개수 가져오기 페이징에 필요한 듯 -->
	<select id="getBoardCount" resultType="int">
	SELECT COUNT(*) FROM board
	</select>
	
	
	<!-- 페이징 처리 후 전체 게시글 가져오기. -->
		<select id="getBoardListForPaging" resultType="com.otree.douzone.dto.Board" >
		 SELECT boardId, userId, workspaceId, boardTitle, boardContent, createdAt, name,  readcount
			FROM (
  			SELECT B.boardId, B.userId, B.workspaceId, B.boardTitle, B.boardContent, 
  			B.createdAt, U.name,  B.readcount, ROW_NUMBER() OVER (ORDER BY createdAt desc) AS rn
			FROM board B
			JOIN otreeuser U ON B.USERID = U.USERID
			WHERE workspaceId = #{param3}
				) 
				WHERE rn BETWEEN #{param2} AND #{param1}
		</select>
	
	
	<!-- 해당 워크스페이스의 BoardList 하지만 join이 첨가된 것 가져오기 -->
	<select id ="getBoardList" parameterType="int" resultType="com.otree.douzone.dto.Board">
	SELECT B.boardId, B.userId, B.workspaceId, B.boardTitle, B.boardContent, B.createdAt, U.name,  B.readcount
	FROM board B
	JOIN otreeuser U ON B.USERID = U.USERID
	WHERE workspaceId = #{workspaceId}
	ORDER BY boardId DESC
	</select>


	<!-- 제목으로 검색하기 -->
	<select id ="getBoardListByBoardTitle" parameterType="String" resultType="com.otree.douzone.dto.Board">
	 <![CDATA[
	 SELECT boardId, userId, workspaceId, boardTitle, boardContent, createdAt, readcount
		FROM board 
		WHERE boardTitle LIKE '%'||#{boardTitle}||'%'
	 ]]>
	
	</select>
	
	<!-- 게시글 클릭시 board객체 뿌리기 -->
	<select id ="getBoardByBoardId" parameterType="int" resultType="com.otree.douzone.dto.Board">
	SELECT B.boardId, B.userId, B.workspaceId, B.boardTitle, B.boardContent, B.createdAt, B.readcount, U.name
	FROM board B
	JOIN otreeuser U ON B.USERID = U.USERID
	WHERE boardId = #{boardId}
	</select>
	
	<!-- 게시글 클릭시 readcount +1 -->
	<update id="updateBoardReadCountByBoardId" parameterType="int" >
	UPDATE board
	SET readCount = readCount+1
	WHERE boardId=#{boardId}	
	</update>
	
	
	<!-- 제목과 컨텐츠 업데이트가능. -->
	<update id="updateBoard" parameterType="com.otree.douzone.dto.Board">
	UPDATE board
	SET boardTitle = #{boardTitle}, boardContent = #{boardContent}
	WHERE boardId = #{boardId}
	</update>
	
	
	<!-- 자식테이블 부터 지우기. -->
	<delete id="deleteBoard" parameterType="int">
    BEGIN
    	DELETE FROM boardcomment WHERE boardId = #{boardId};
        DELETE FROM boardfile WHERE boardId = #{boardId};
        DELETE FROM board WHERE boardId = #{boardId};
    END;
	</delete>
	
	

	

</mapper>